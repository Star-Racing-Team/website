{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAO,SAAS,IACZ,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAwDhC,C,O,c,C,E,O,C,W,C,I,I,E,I,K,E,W,C,E,a,C,C,E","sources":["<anon>","src/js/theme.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"iO6Mx\", function(module, exports) {\n\n$parcel$export(module.exports, \"setTheme\", () => $db12283b528bfe21$export$2e49b867b7a0847c);\nfunction $db12283b528bfe21$export$2e49b867b7a0847c() {\n    document.body.classList.add(\"light\");\n/*\n    // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.body.classList.add('dark');\n    } else {\n        document.body.classList.add('light');\n    }\n\n    // Change the icons inside the button based on previous settings\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.querySelectorAll('.theme-toggle-light-icon').forEach((element) => {\n            element.classList.remove('hidden');\n        });\n    } else {\n        document.querySelectorAll('.theme-toggle-dark-icon').forEach((element) => {\n            element.classList.remove('hidden');\n        });\n    }\n\n    document.querySelectorAll('.theme-toggle').forEach((element) => {\n        element.addEventListener('click', function () {\n            // toggle icons inside button\n            document.querySelectorAll('.theme-toggle-light-icon').forEach((element) => {\n                element.classList.toggle('hidden');\n            });\n            document.querySelectorAll('.theme-toggle-dark-icon').forEach((element) => {\n                element.classList.toggle('hidden');\n            });\n\n            if (localStorage.getItem('color-theme')) {\n                // if set via local storage previously\n                if (localStorage.getItem('color-theme') === 'light') {\n                    document.body.classList.remove('light');\n                    document.body.classList.add('dark');\n                    localStorage.setItem('color-theme', 'dark');\n                } else {\n                    document.body.classList.remove('dark');\n                    document.body.classList.add('light');\n                    localStorage.setItem('color-theme', 'light');\n                }\n            } else {\n                // if NOT set via local storage previously\n                if (document.body.classList.contains('dark')) {\n                    document.body.classList.remove('dark');\n                    document.body.classList.add('light');\n                    localStorage.setItem('color-theme', 'light');\n                } else {\n                    document.body.classList.remove('light');\n                    document.body.classList.add('dark');\n                    localStorage.setItem('color-theme', 'dark');\n                }\n            }\n        });\n    });\n    */ }\n\n});\n\n\n//# sourceMappingURL=theme.485d509c.js.map\n","export function setTheme() {\n    document.body.classList.add('light');\n    /*\n    // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.body.classList.add('dark');\n    } else {\n        document.body.classList.add('light');\n    }\n\n    // Change the icons inside the button based on previous settings\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.querySelectorAll('.theme-toggle-light-icon').forEach((element) => {\n            element.classList.remove('hidden');\n        });\n    } else {\n        document.querySelectorAll('.theme-toggle-dark-icon').forEach((element) => {\n            element.classList.remove('hidden');\n        });\n    }\n\n    document.querySelectorAll('.theme-toggle').forEach((element) => {\n        element.addEventListener('click', function () {\n            // toggle icons inside button\n            document.querySelectorAll('.theme-toggle-light-icon').forEach((element) => {\n                element.classList.toggle('hidden');\n            });\n            document.querySelectorAll('.theme-toggle-dark-icon').forEach((element) => {\n                element.classList.toggle('hidden');\n            });\n\n            if (localStorage.getItem('color-theme')) {\n                // if set via local storage previously\n                if (localStorage.getItem('color-theme') === 'light') {\n                    document.body.classList.remove('light');\n                    document.body.classList.add('dark');\n                    localStorage.setItem('color-theme', 'dark');\n                } else {\n                    document.body.classList.remove('dark');\n                    document.body.classList.add('light');\n                    localStorage.setItem('color-theme', 'light');\n                }\n            } else {\n                // if NOT set via local storage previously\n                if (document.body.classList.contains('dark')) {\n                    document.body.classList.remove('dark');\n                    document.body.classList.add('light');\n                    localStorage.setItem('color-theme', 'light');\n                } else {\n                    document.body.classList.remove('light');\n                    document.body.classList.add('dark');\n                    localStorage.setItem('color-theme', 'dark');\n                }\n            }\n        });\n    });\n    */\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$db12283b528bfe21$export$2e49b867b7a0847c","document","body","classList","add","Object","defineProperty","get","set","s","enumerable","configurable"],"version":3,"file":"theme.485d509c.js.map"}