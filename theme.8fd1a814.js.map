{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAO,SAAS,IAER,AAAwC,SAAxC,aAAa,OAAO,CAAC,gBAA8B,CAAA,AAAE,gBAAiB,eAAiB,OAAO,UAAU,CAAC,gCAAgC,OAAO,AAAP,EAGzI,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAF5B,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAM5B,AAAwC,SAAxC,aAAa,OAAO,CAAC,gBAA8B,CAAA,AAAE,gBAAiB,eAAiB,OAAO,UAAU,CAAC,gCAAgC,OAAO,AAAP,EAKzI,SAAS,gBAAgB,CAAC,2BAA2B,OAAO,CAAC,AAAC,IAC1D,EAAQ,SAAS,CAAC,MAAM,CAAC,SAC7B,GANA,SAAS,gBAAgB,CAAC,4BAA4B,OAAO,CAAC,AAAC,IAC3D,EAAQ,SAAS,CAAC,MAAM,CAAC,SAC7B,GAOJ,SAAS,gBAAgB,CAAC,iBAAiB,OAAO,CAAC,AAAC,IAChD,EAAQ,gBAAgB,CAAC,QAAS,WAE9B,SAAS,gBAAgB,CAAC,4BAA4B,OAAO,CAAC,AAAC,IAC3D,EAAQ,SAAS,CAAC,MAAM,CAAC,SAC7B,GACA,SAAS,gBAAgB,CAAC,2BAA2B,OAAO,CAAC,AAAC,IAC1D,EAAQ,SAAS,CAAC,MAAM,CAAC,SAC7B,GAEI,aAAa,OAAO,CAAC,eAEjB,AAAwC,UAAxC,aAAa,OAAO,CAAC,gBACrB,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAC/B,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAC5B,aAAa,OAAO,CAAC,cAAe,UAEpC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAC/B,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAC5B,aAAa,OAAO,CAAC,cAAe,UAIpC,SAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SACjC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAC/B,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAC5B,aAAa,OAAO,CAAC,cAAe,WAEpC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAC/B,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAC5B,aAAa,OAAO,CAAC,cAAe,QAGhD,EACJ,EACJ,C,O,c,C,E,O,C,W,C,I,I,E,I,K,E,W,C,E,a,C,C,E","sources":["<anon>","src/js/theme.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"iO6Mx\", function(module, exports) {\n\n$parcel$export(module.exports, \"setTheme\", () => $db12283b528bfe21$export$2e49b867b7a0847c);\nfunction $db12283b528bfe21$export$2e49b867b7a0847c() {\n    // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n    if (localStorage.getItem(\"color-theme\") === \"dark\" || !(\"color-theme\" in localStorage) && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) document.body.classList.add(\"dark\");\n    else document.body.classList.add(\"light\");\n    // Change the icons inside the button based on previous settings\n    if (localStorage.getItem(\"color-theme\") === \"dark\" || !(\"color-theme\" in localStorage) && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) document.querySelectorAll(\".theme-toggle-light-icon\").forEach((element)=>{\n        element.classList.remove(\"hidden\");\n    });\n    else document.querySelectorAll(\".theme-toggle-dark-icon\").forEach((element)=>{\n        element.classList.remove(\"hidden\");\n    });\n    document.querySelectorAll(\".theme-toggle\").forEach((element)=>{\n        element.addEventListener(\"click\", function() {\n            // toggle icons inside button\n            document.querySelectorAll(\".theme-toggle-light-icon\").forEach((element)=>{\n                element.classList.toggle(\"hidden\");\n            });\n            document.querySelectorAll(\".theme-toggle-dark-icon\").forEach((element)=>{\n                element.classList.toggle(\"hidden\");\n            });\n            if (localStorage.getItem(\"color-theme\")) {\n                // if set via local storage previously\n                if (localStorage.getItem(\"color-theme\") === \"light\") {\n                    document.body.classList.remove(\"light\");\n                    document.body.classList.add(\"dark\");\n                    localStorage.setItem(\"color-theme\", \"dark\");\n                } else {\n                    document.body.classList.remove(\"dark\");\n                    document.body.classList.add(\"light\");\n                    localStorage.setItem(\"color-theme\", \"light\");\n                }\n            } else // if NOT set via local storage previously\n            if (document.body.classList.contains(\"dark\")) {\n                document.body.classList.remove(\"dark\");\n                document.body.classList.add(\"light\");\n                localStorage.setItem(\"color-theme\", \"light\");\n            } else {\n                document.body.classList.remove(\"light\");\n                document.body.classList.add(\"dark\");\n                localStorage.setItem(\"color-theme\", \"dark\");\n            }\n        });\n    });\n}\n\n});\n\n\n//# sourceMappingURL=theme.8fd1a814.js.map\n","export function setTheme() {\n    // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.body.classList.add('dark');\n    } else {\n        document.body.classList.add('light');\n    }\n\n    // Change the icons inside the button based on previous settings\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.querySelectorAll('.theme-toggle-light-icon').forEach((element) => {\n            element.classList.remove('hidden');\n        });\n    } else {\n        document.querySelectorAll('.theme-toggle-dark-icon').forEach((element) => {\n            element.classList.remove('hidden');\n        });\n    }\n\n    document.querySelectorAll('.theme-toggle').forEach((element) => {\n        element.addEventListener('click', function () {\n            // toggle icons inside button\n            document.querySelectorAll('.theme-toggle-light-icon').forEach((element) => {\n                element.classList.toggle('hidden');\n            });\n            document.querySelectorAll('.theme-toggle-dark-icon').forEach((element) => {\n                element.classList.toggle('hidden');\n            });\n\n            if (localStorage.getItem('color-theme')) {\n                // if set via local storage previously\n                if (localStorage.getItem('color-theme') === 'light') {\n                    document.body.classList.remove('light');\n                    document.body.classList.add('dark');\n                    localStorage.setItem('color-theme', 'dark');\n                } else {\n                    document.body.classList.remove('dark');\n                    document.body.classList.add('light');\n                    localStorage.setItem('color-theme', 'light');\n                }\n            } else {\n                // if NOT set via local storage previously\n                if (document.body.classList.contains('dark')) {\n                    document.body.classList.remove('dark');\n                    document.body.classList.add('light');\n                    localStorage.setItem('color-theme', 'light');\n                } else {\n                    document.body.classList.remove('light');\n                    document.body.classList.add('dark');\n                    localStorage.setItem('color-theme', 'dark');\n                }\n            }\n        });\n    });\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$db12283b528bfe21$export$2e49b867b7a0847c","localStorage","getItem","window","matchMedia","matches","document","body","classList","add","querySelectorAll","forEach","element","remove","addEventListener","toggle","setItem","contains","Object","defineProperty","get","set","s","enumerable","configurable"],"version":3,"file":"theme.8fd1a814.js.map"}